name: Send Bale Notification on Commit
on:
  push:
    branches: [ main, master ]

jobs:
  send-bale-notification:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version info and changes
        id: get_info
        run: |
          python3 << 'EOF'
          import subprocess
          import re
          import json
          import os
          
          try:
              result = subprocess.run(
                  ['git', 'diff', '--name-only', os.environ['GITHUB_SHA'] + '~1', os.environ['GITHUB_SHA']],
                  capture_output=True, text=True, check=True
              )
              changed_files = [f for f in result.stdout.strip().split('\n') if f]
          except:
              changed_files = ["خطا در دریافت تغییرات"]
          
          version = "نامشخص"
          stable = "False"
          
          try:
              with open('version.py', 'r') as f:
                  content = f.read()
              
              version_match = re.search(r'version\s*=\s*["\']([^"\']+)["\']', content)
              stable_match = re.search(r'stable\s*=\s*(True|False)', content)
              
              version = version_match.group(1) if version_match else "نامشخص"
              stable = stable_match.group(1) if stable_match else "False"
          except:
              pass
          
          try:
              commit_msg = subprocess.run(
                  ['git', 'log', '--format=%B', '-n', '1', os.environ['GITHUB_SHA']],
                  capture_output=True, text=True, check=True
              ).stdout.strip()
          except:
              commit_msg = "خطا در دریافت پیام کامیت"
          
          files_text = "\\n".join([f"• {file}" for file in changed_files]) if changed_files else "بدون تغییرات فایل"
          
          print(f"VERSION={version}")
          print(f"STABLE={stable}")
          print(f"CHANGED_FILES={files_text}")
          print(f"COMMIT_MSG={commit_msg}")
          EOF

      - name: Send message to Bale
        run: |
          python3 << 'EOF'
          import requests
          import os
          
          bot_token = os.environ['BALE_BOT_TOKEN']
          chat_id = os.environ['BALE_CHAT_ID']
          version = os.environ['VERSION']
          stable = os.environ['STABLE']
          changed_files = os.environ['CHANGED_FILES']
          commit_msg = os.environ['COMMIT_MSG']
          github_url = os.environ['GITHUB_SERVER_URL'] + '/' + os.environ['GITHUB_REPOSITORY'] + '/commit/' + os.environ['GITHUB_SHA']
          
          pypi_status = "✅" if stable == "True" else "❌"
          
          message = f"""🎉 **نسخه جدید کتابخانه پایروبله منتشر شد!**

          **تغییرات در فایل‌های:**
          {changed_files}

          **پیام کامیت:**
          {commit_msg}

          **نسخه فعلی کتابخانه:** {version}
          **منتشر شده در pypi:** {pypi_status}

          **🔗 مشاهده در GitHub:**
          {github_url}

          🆔 @pyrobale"""
          
          url = f"https://tapi.bale.ai/bot{bot_token}/sendMessage"
          payload = {
              "chat_id": chat_id,
              "text": message,
              "parse_mode": "Markdown"
          }
          
          response = requests.post(url, json=payload)
          if response.status_code == 200:
              print("Message Sent!")
          else:
              print(f"Error on sending message: {response.status_code}")
              print(response.text)
          EOF
        env:
          BALE_BOT_TOKEN: ${{ secrets.BALE_BOT_TOKEN }}
          BALE_CHAT_ID: ${{ secrets.BALE_CHAT_ID }}
          VERSION: ${{ steps.get_info.outputs.VERSION }}
          STABLE: ${{ steps.get_info.outputs.STABLE }}
          CHANGED_FILES: ${{ steps.get_info.outputs.CHANGED_FILES }}
          COMMIT_MSG: ${{ steps.get_info.outputs.COMMIT_MSG }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}